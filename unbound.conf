#include: "otherfile.conf"

#include-toplevel: "otherfile.conf"

server:

	verbosity: 0

	statistics-interval: 0

	# shm-enable: no

	# shm-key: 11777

	statistics-cumulative: no

	extended-statistics: no

	statistics-inhibit-zero: yes

	num-threads: 4

    interface: 127.0.0.1
#    interface: fe80::245f:77ff:fee8:1478/64
	# interface: 0.0.0.0
	# interface: ::0
	# interface: 192.0.2.153
	# interface: 192.0.2.154
	# interface: 192.0.2.154@5003
	# interface: 2001:DB8::5
	# interface: eth0@5003
	#
	# for dns over tls and raw dns over port 80
	# interface: 0.0.0.0@443
	# interface: ::0@443
	# interface: 0.0.0.0@80
	# interface: ::0@80

	# interface-automatic: no
	interface-automatic: no

	# interface-automatic-ports: ""

	# port: 5353

	# outgoing-interface: 192.0.2.153
	# outgoing-interface: 2001:DB8::5
	# outgoing-interface: 2001:DB8::6

	# prefer-ip6: no

	# prefer-ip4: no

	# outgoing-range: 4096

	outgoing-port-permit: 32768-60999

	outgoing-port-avoid: 0-32767
	outgoing-port-avoid: 61000-65535

	# outgoing-num-tcp: 10

	# incoming-num-tcp: 10

	# so-rcvbuf: 0

	# so-sndbuf: 0

	so-reuseport: yes

	ip-transparent: yes

	# ip-freebind: no

	# ip-dscp: 0

	# edns-buffer-size: 1232

	# max-udp-size: 1232

	# stream-wait-size: 4m

	# msg-buffer-size: 65552

	msg-cache-size: 70m

	# msg-cache-slabs: 4

	# num-queries-per-thread: 1024

	# jostle-timeout: 200

	# delay-close: 0

	# udp-connect: yes

	# outbound-msg-retry: 5

	# max-sent-count: 32

	# max-query-restarts: 11

	# unknown-server-time-limit: 376

	# discard-timeout: 1900

	# wait-limit: 1000

	# wait-limit-cookie: 10000

	# wait-limit-netblock: 192.0.2.0/24 50000

	# wait-limit-cookie-netblock: 192.0.2.0/24 50000

	rrset-cache-size: 140m

	# rrset-cache-slabs: 4

	cache-min-ttl: 3600

	cache-max-ttl: 86400

	# cache-max-negative-ttl: 3600

	# cache-min-negative-ttl: 0

	# infra-host-ttl: 900

	# infra-cache-min-rtt: 50

	# infra-cache-max-rtt: 120000

	infra-keep-probing: yes

	# infra-cache-slabs: 4

	# infra-cache-numhosts: 10000

	# interface-*.
	# repeat the define-tag statement to add additional tags.
	# define-tag: "tag1 tag2 tag3"

	do-ip4: yes

	do-ip6: yes

	# do-nat64: no

	# nat64-prefix: 64:ff9b::0/96

	# do-udp: yes

	# do-tcp: yes

	# tcp-upstream: no

	# udp-upstream-without-downstream: no

	# tcp-mss: 0

	# outgoing-tcp-mss: 0

	# tcp-idle-timeout: 30000

	edns-tcp-keepalive: yes

	# edns-tcp-keepalive-timeout: 120000

	# sock-queue-timeout: 0

	# use-systemd: no

	# do-daemonize: yes

	# allow (recursive ok), allow_setrd (recursive ok, rd bit is forced on),
	# allow_snoop (recursive and nonrecursive ok)
	# allow_cookie (allow UDP with valid cookie or stateful transport)
	# deny_non_local (drop queries unless can be answered from local-data)
	# refuse_non_local (like deny_non_local but polite error reply).
	access-control: 127.0.0.0/8 allow
	access-control: ::1 allow
	# access-control: 10.0.0.0/8 allow # virtualbox
	# access-control: ::ffff:127.0.0.1 allow
	access-control: 0.0.0.0/0 refuse
	access-control: ::0/0 refuse

	# access-control-tag: 192.0.2.0/24 "tag2 tag3"

	# access-control-tag-action: 192.0.2.0/24 tag3 refuse

	# access-control-tag-data: 192.0.2.0/24 tag2 "A 127.0.0.1"

	# access-control-view: 192.0.2.0/24 viewname

	# interface-action: 192.0.2.153 allow
	# interface-action: 192.0.2.154 allow
	# interface-action: 192.0.2.154@5003 allow
	# interface-action: 2001:DB8::5 allow
	# interface-action: eth0@5003 allow

	# : eth0@5003 "tag2 tag3"

	# interface-tag-action: eth0@5003 tag3 refuse

	# interface-tag-data: eth0@5003 tag2 "A 127.0.0.1"

	# interface-view: eth0@5003 viewname

	chroot: ""

	username: "unbound"

	directory: "/etc/unbound"

	# Use of this option sets use-syslog to "no".
	# logfile: "/var/log/unbound/unbound.log"

	# use-syslog: yes

	log-identity: "unbound"

	log-time-ascii: no

	log-queries: no

	log-replies: no

	log-tag-queryreply: yes

	log-destaddr: yes

	log-local-actions: no

	log-servfail: yes

	# pidfile: "/run/unbound/unbound.pid"

	# get one from https://www.internic.net/domain/named.cache
	# root-hints: ""

	hide-identity: yes

	hide-version: yes

	hide-trustanchor: yes

	hide-http-user-agent: yes

	# identity: ""

	# version: ""

	# nsid: "aabbccdd"

	# http-user-agent: ""

	# 	-1 : fetch all targets opportunistically,
	# 	0: fetch on demand,
	#	positive value: fetch that many targets opportunistically.
	# Enclose the list of numbers between quotes ("").
	# target-fetch-policy: "3 2 1 0 0"

	harden-short-bufsize: yes

	# harden-large-queries: no

	harden-glue: yes

	harden-dnssec-stripped: yes

	harden-below-nxdomain: yes

	harden-referral-path: yes

	harden-algo-downgrade: yes

	harden-unknown-additional: yes

	qname-minimisation: yes

	qname-minimisation-strict: yes

	aggressive-nsec: yes

	use-caps-for-id: yes

	# caps-exempt: "licdn.com"
	# caps-exempt: "senderbase.org"
    private-address: 192.168.100.111/27
	# private-address: 10.0.0.0/8
	# private-address: 172.16.0.0/12
	# private-address: 192.168.0.0/16
	# private-address: 169.254.0.0/16
	# private-address: fd00::/8
	# private-address: fe80::/10
	# private-address: ::ffff:0:0/96

	# private-domain: "example.com"

	unwanted-reply-threshold: 10000000

	# do-not-query-address: 127.0.0.1/8
	# do-not-query-address: ::1

	do-not-query-localhost: yes

	prefetch: yes

	prefetch-key: yes

	deny-any: yes

	rrset-roundrobin: yes

	minimal-responses: yes

	disable-dnssec-lame-check: no

	# For redis cachedb use:
	#    "ipsecmod validator cachedb iterator"
	module-config: "ipsecmod validator iterator"

	# auto-trust-anchor-file: "/var/lib/unbound/root.key"

	trust-anchor-signaling: no

	root-key-sentinel: yes

	# trust-anchor-file: "/etc/unbound/root.key"

	# trust-anchor: "nlnetlabs.nl. DNSKEY 257 3 5 AQPzzTWMz8qSWIQlfRnPckx2BiVmkVN6LPupO3mbz7FhLSnm26n6iG9N Lby97Ji453aWZY3M5/xJBSOS2vWtco2t8C0+xeO1bc/d6ZTy32DHchpW 6rDH1vp86Ll+ha0tmwyy9QP7y2bVw5zSbFCrefk8qCUBgfHm9bHzMG1U BYtEIQ=="
	# trust-anchor: "jelte.nlnetlabs.nl. DS 42860 5 1 14D739EB566D2B1A5E216A0BA4D17FA9B038BE4A"

	# the trusted-keys { name flag proto algo "key"; }; clauses are read.
	# you need external update procedures to track changes in keys.
	# trusted-keys-file: ""
	#
	trusted-keys-file: /etc/unbound/keys.d/*.key
	auto-trust-anchor-file: "/var/lib/unbound/root.key"

	# domain-insecure: "example.com"

	# val-override-date: ""

	val-bogus-ttl: 30

	# val-sig-skew-min: 3600
	# val-sig-skew-max: 86400

	# val-max-restart: 5

	val-clean-additional: yes

	val-permissive-mode: no

	# ignore-cd-flag: no

	# disable-edns-do: no

	serve-expired: yes

	serve-expired-ttl: 14400

    serve-expired-ttl-reset: yes
	# serve-expired-reply-ttl: 30
	#
	# serve-expired-client-timeout: 0

	# serve-original-ttl: no

	# 0: off. 1: A line per failed user query. 2: With reason and bad IP.
	val-log-level: 2

	# val-nsec3-keysize-iterations: "1024 150 2048 150 4096 150"

	# zonemd-permissive-mode: no

	# add-holddown: 2592000 # 30 days

	# del-holddown: 2592000 # 30 days

	# keep-missing: 31622400 # 366 days

	# permit-small-holddown: no

	key-cache-size: 100m

	# key-cache-slabs: 4

	neg-cache-size: 100m

	# local-zone: "localhost." nodefault
	# local-zone: "127.in-addr.arpa." nodefault
	# local-zone: "1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa." nodefault
	# local-zone: "home.arpa." nodefault
	# local-zone: "onion." nodefault
	# local-zone: "test." nodefault
	# local-zone: "invalid." nodefault
	# local-zone: "10.in-addr.arpa." nodefault
	# local-zone: "16.172.in-addr.arpa." nodefault
	# local-zone: "17.172.in-addr.arpa." nodefault
	# local-zone: "18.172.in-addr.arpa." nodefault
	# local-zone: "19.172.in-addr.arpa." nodefault
	# local-zone: "20.172.in-addr.arpa." nodefault
	# local-zone: "21.172.in-addr.arpa." nodefault
	# local-zone: "22.172.in-addr.arpa." nodefault
	# local-zone: "23.172.in-addr.arpa." nodefault
	# local-zone: "24.172.in-addr.arpa." nodefault
	# local-zone: "25.172.in-addr.arpa." nodefault
	# local-zone: "26.172.in-addr.arpa." nodefault
	# local-zone: "27.172.in-addr.arpa." nodefault
	# local-zone: "28.172.in-addr.arpa." nodefault
	# local-zone: "29.172.in-addr.arpa." nodefault
	# local-zone: "30.172.in-addr.arpa." nodefault
	# local-zone: "31.172.in-addr.arpa." nodefault
	# local-zone: "168.192.in-addr.arpa." nodefault
	# local-zone: "0.in-addr.arpa." nodefault
	# local-zone: "254.169.in-addr.arpa." nodefault
	# local-zone: "2.0.192.in-addr.arpa." nodefault
	# local-zone: "100.51.198.in-addr.arpa." nodefault
	# local-zone: "113.0.203.in-addr.arpa." nodefault
	# local-zone: "255.255.255.255.in-addr.arpa." nodefault
	# local-zone: "0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa." nodefault
	# local-zone: "d.f.ip6.arpa." nodefault
	# local-zone: "8.e.f.ip6.arpa." nodefault
	# local-zone: "9.e.f.ip6.arpa." nodefault
	# local-zone: "a.e.f.ip6.arpa." nodefault
	# local-zone: "b.e.f.ip6.arpa." nodefault
	# local-zone: "8.b.d.0.1.0.0.2.ip6.arpa." nodefault
	# And for 64.100.in-addr.arpa. to 127.100.in-addr.arpa.

	# local-zone: "example.com" ipset

	# unblock-lan-zones: no

	# insecure-lan-zones: no

	# a number of locally served zones can be configured.
	# 	local-zone: <zone> <type>
	# 	local-data: "<resource record string>"
	# o deny serves local data (if any), else, drops queries.
	# o refuse serves local data (if any), else, replies with error.
	# o static serves local data, else, nxdomain or nodata answer.
	# o transparent gives local data, but resolves normally for other names
	# o redirect serves the zone data for any subdomain in the zone.
	# o nodefault can be used to normally resolve AS112 zones.
	# o typetransparent resolves normally for other types and other names
	# o inform acts like transparent, but logs client IP address
	# o inform_deny drops queries and logs client IP address
	# o inform_redirect redirects queries and logs client IP address
	# o always_transparent, always_refuse, always_nxdomain, always_nodata,
	#   always_deny resolve in that way but ignore local data for
	#   that name
	# o block_a resolves all records normally but returns
	#   NODATA for A queries and ignores local data for that name
	# o always_null returns 0.0.0.0 or ::0 for any name in the zone.
	# o noview breaks out of that view towards global local-zones.
	#
	# defaults are localhost address, reverse for 127.0.0.1 and ::1
	# and nxdomain for AS112 zones. If you configure one of these zones
	# the default content is omitted, or you can omit it with 'nodefault'.
	#
	# If you configure local-data without specifying local-zone, by
	# default a transparent local-zone is created for the data.
	#
	# You can add locally served data with
	# local-zone: "local." static
	# local-data: "mycomputer.local. IN A 192.0.2.51"
	# local-data: 'mytext.local TXT "content of text record"'
    local-data: "movies.alham.local IN A 192.168.100.111"
	#
	# You can override certain queries with
	# local-data: "adserver.example.com A 127.0.0.1"
	#
	# You can redirect a domain to a fixed address with
	# (this makes example.com, www.example.com, etc, all go to 192.0.2.3)
	# local-zone: "example.com" redirect
	# local-data: "example.com A 192.0.2.3"
	#
	# Shorthand to make PTR records, "IPv4 name" or "IPv6 name".
	# You can also add PTR records using local-data directly, but then
	# you need to do the reverse notation yourself.
	# local-data-ptr: "192.0.2.3 www.example.com"

	include: /etc/unbound/local.d/*.conf

	# tag a localzone with a list of tag names (in "" with spaces between)
	# local-zone-tag: "example.com" "tag2 tag3"

	# add a netblock specific override to a localzone, with zone type
	# local-zone-override: "example.com" 192.0.2.0/24 refuse

	# service clients over TLS (on the TCP sockets) with plain DNS inside
	# the TLS stream, and over HTTPS using HTTP/2 as specified in RFC8484.
	# Give the certificate to use and private key.
	# default is "" (disabled).  requires restart to take effect.
	# tls-service-key: "/etc/unbound/unbound_server.key"
	# tls-service-pem: "/etc/unbound/unbound_server.pem"
	# tls-port: 853
	# https-port: 443

	# cipher setting for TLSv1.2
	# tls-ciphers: "DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256"
	# cipher setting for TLSv1.3
	# tls-ciphersuites: "TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256"
	# Fedora/RHEL: use system-wide crypto policies
	tls-ciphers: "PROFILE=SYSTEM"

	# Pad responses to padded queries received over TLS
	# pad-responses: yes

	# Padded responses will be padded to the closest multiple of this size.
	# pad-responses-block-size: 468

	# Use the SNI extension for TLS connections.  Default is yes.
	# Changing the value requires a reload.
	# tls-use-sni: yes

	# Add the secret file for TLS Session Ticket.
	# Secret file must be 80 bytes of random data.
	# First key use to encrypt and decrypt TLS session tickets.
	# Other keys use to decrypt only.
	# requires restart to take effect.
	# tls-session-ticket-keys: "path/to/secret_file1"
	# tls-session-ticket-keys: "path/to/secret_file2"

	# request upstream over TLS (with plain DNS inside the TLS stream).
	# Default is no.  Can be turned on and off with unbound-control.
	# tls-upstream: no

	# Certificates used to authenticate connections made upstream.
	# tls-cert-bundle: ""

	# Add system certs to the cert bundle, from the Windows Cert Store
	# tls-win-cert: no
	# and on other systems, the default openssl certificates
	# tls-system-cert: no

	# Pad queries over TLS upstreams
	# pad-queries: yes

	# Padded queries will be padded to the closest multiple of this size.
	# pad-queries-block-size: 128

	# Also serve tls on these port numbers (eg. 443, ...), by listing
	# tls-additional-port: portno for each of the port numbers.

	# HTTP endpoint to provide DNS-over-HTTPS service on.
	# http-endpoint: "/dns-query"

	# HTTP/2 SETTINGS_MAX_CONCURRENT_STREAMS value to use.
	# http-max-streams: 100

	# Maximum number of bytes used for all HTTP/2 query buffers.
	# http-query-buffer-size: 4m

	# Maximum number of bytes used for all HTTP/2 response buffers.
	# http-response-buffer-size: 4m

	# Set TCP_NODELAY socket option on sockets used for DNS-over-HTTPS
	# service.
	# http-nodelay: yes

	# Disable TLS for DNS-over-HTTP downstream service.
	# http-notls-downstream: no

	# The interfaces that use these listed port numbers will support and
	# expect PROXYv2. For UDP and TCP/TLS interfaces.
	# proxy-protocol-port: portno for each of the port numbers.

	# DNS64 prefix. Must be specified when DNS64 is use.
	# Enable dns64 in module-config.  Used to synthesize IPv6 from IPv4.
	# dns64-prefix: 64:ff9b::0/96

	# DNS64 ignore AAAA records for these domains and use A instead.
	# dns64-ignore-aaaa: "example.com"

	# ratelimit for uncached, new queries, this limits recursion effort.
	# ratelimiting is experimental, and may help against randomqueryflood.
	# if 0(default) it is disabled, otherwise state qps allowed per zone.
	# ratelimit: 0

	# ratelimits are tracked in a cache, size in bytes of cache (or k,m).
	# ratelimit-size: 4m
	# ratelimit cache slabs, reduces lock contention if equal to cpucount.
	# ratelimit-slabs: 4

	# 0 blocks when ratelimited, otherwise let 1/xth traffic through
	# ratelimit-factor: 10

	# Aggressive rate limit when the limit is reached and until demand has
	# decreased in a 2 second rate window.
	# ratelimit-backoff: no

	# override the ratelimit for a specific domain name.
	# give this setting multiple times to have multiple overrides.
	# ratelimit-for-domain: example.com 1000
	# override the ratelimits for all domains below a domain name
	# can give this multiple times, the name closest to the zone is used.
	# ratelimit-below-domain: com 1000

	# global query ratelimit for all ip addresses.
	# feature is experimental.
	# if 0(default) it is disabled, otherwise states qps allowed per ip address
	# ip-ratelimit: 0

	# global query ratelimit for all ip addresses with a valid DNS Cookie.
	# feature is experimental.
	# if 0(default) it is disabled, otherwise states qps allowed per ip address
	# useful in combination with 'allow_cookie'.
	# If used, suggested to be higher than ip-ratelimit, tenfold.
	# ip-ratelimit-cookie: 0

	# ip ratelimits are tracked in a cache, size in bytes of cache (or k,m).
	# ip-ratelimit-size: 4m
	# ip ratelimit cache slabs, reduces lock contention if equal to cpucount.
	# ip-ratelimit-slabs: 4

	# 0 blocks when ip is ratelimited, otherwise let 1/xth traffic through
	# ip-ratelimit-factor: 10

	# Aggressive rate limit when the limit is reached and until demand has
	# decreased in a 2 second rate window.
	# ip-ratelimit-backoff: no

	# Limit the number of connections simultaneous from a netblock
	# tcp-connection-limit: 192.0.2.0/24 12

	# select from the fastest servers this many times out of 1000. 0 means
	# the fast server select is disabled. prefetches are not sped up.
	# fast-server-permil: 0
	# the number of servers that will be used in the fast server selection.
	# fast-server-num: 3

	# reply to requests containing DNS Cookies as specified in RFC 7873 and RFC 9018.
	# answer-cookie: no

	# secret for DNS Cookie generation.
	# useful for anycast deployments.
	# example value "000102030405060708090a0b0c0d0e0f".
	# cookie-secret: <128 bit random hex string>

	# File with cookie secrets, the 'cookie-secret:' option is ignored
	# and the file can be managed to have staging and active secrets
	# with remote control commands. Disabled with "". Default is "".
	# cookie-secret-file: "/usr/local/etc/unbound_cookiesecrets.txt"

	# Enable to attach Extended DNS Error codes (RFC8914) to responses.
	# Fedora defaults to yes.
	ede: yes

	# Enable to attach an Extended DNS Error (RFC8914) Code 3 - Stale
	# Answer as EDNS0 option to expired responses.
	# Note that the ede option above needs to be enabled for this to work.
	# Fedora defaults to yes.
	ede-serve-expired: yes

	# Specific options for ipsecmod. Unbound needs to be configured with
	# --enable-ipsecmod for these to take effect.
	#
	# Enable or disable ipsecmod (it still needs to be defined in
	# module-config above). Can be used when ipsecmod needs to be
	# enabled/disabled via remote-control(below).
	# Fedora: module will be enabled on-demand by libreswan
	ipsecmod-enabled: no

	# Path to executable external hook. It must be defined when ipsecmod is
	# listed in module-config (above).
	# ipsecmod-hook: "./my_executable"
	ipsecmod-hook:/usr/libexec/ipsec/_unbound-hook

	# When enabled Unbound will reply with SERVFAIL if the return value of
	# the ipsecmod-hook is not 0.
	# ipsecmod-strict: no
	#
	# Maximum time to live (TTL) for cached A/AAAA records with IPSECKEY.
	# ipsecmod-max-ttl: 3600
	#
	# Reply with A/AAAA even if the relevant IPSECKEY is bogus. Mainly used for
	# testing.
	# ipsecmod-ignore-bogus: no
	#
	# Domains for which ipsecmod will be triggered. If not defined (default)
	# all domains are treated as being allowed.
	# ipsecmod-allow: "example.com"
	# ipsecmod-allow: "nlnetlabs.nl"

	# Timeout for REUSE entries in milliseconds.
	# tcp-reuse-timeout: 60000
	# Max number of queries on a reuse connection.
	# max-reuse-tcp-queries: 200
	# Timeout in milliseconds for TCP queries to auth servers.
	# tcp-auth-query-timeout: 3000


# Python config section. To enable:
# o use --with-pythonmodule to configure before compiling.
# o list python in the module-config string (above) to enable.
#   It can be at the start, it gets validated results, or just before
#   the iterator and process before DNSSEC validation.
# o and give a python-script to run.
python:
	# Script file to load
	# python-script: "/etc/unbound/ubmodule-tst.py"

# Dynamic library config section. To enable:
# o use --with-dynlibmodule to configure before compiling.
# o list dynlib in the module-config string (above) to enable.
#   It can be placed anywhere, the dynlib module is only a very thin wrapper
#   to load modules dynamically.
# o and give a dynlib-file to run. If more than one dynlib entry is listed in
#   the module-config then you need one dynlib-file per instance.
dynlib:
	# Script file to load
	# dynlib-file: "/etc/unbound/dynlib.so"

# Remote control config section.
remote-control:
	# Enable remote control with unbound-control(8) here.
	# set up the keys and certificates with unbound-control-setup.
	# Note: required for unbound-munin package
	control-enable: yes

	# what interfaces are listened to for remote control.
	# give 0.0.0.0 and ::0 to listen to all interfaces.
	# set to an absolute path to use a unix local name pipe, certificates
	# are not used for that, so key and cert files need not be present.
	# control-interface: 127.0.0.1
	# control-interface: ::1
	# moved to /etc/unbound/conf.d/remote-control.conf

	# port number for remote control operations.
	# control-port: 8953

	# for localhost, you can disable use of TLS by setting this to "no"
	# For local sockets this option is ignored, and TLS is not used.
	# control-use-cert: "yes"

	# Unbound server key file.
	server-key-file: "/etc/unbound/unbound_server.key"

	# Unbound server certificate file.
	server-cert-file: "/etc/unbound/unbound_server.pem"

	# unbound-control key file.
	control-key-file: "/etc/unbound/unbound_control.key"

	# unbound-control certificate file.
	control-cert-file: "/etc/unbound/unbound_control.pem"

# Stub and Forward zones
include: /etc/unbound/conf.d/*.conf

# Stub zones.
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of nameservers. list zero or more
# nameservers by hostname or by ipaddress. If you set stub-prime to yes,
# the list is treated as priming hints (default is no).
# With stub-first yes, it attempts without the stub if it fails.
# Consider adding domain-insecure: name and local-zone: name nodefault
# to the server: section if the stub is a locally served zone.
# stub-zone:
#	name: "example.com"
#	stub-addr: 192.0.2.68
#	stub-prime: no
#	stub-first: no
#	stub-tcp-upstream: no
#	stub-tls-upstream: no
#	stub-no-cache: no
# stub-zone:
#	name: "example.org"
#	stub-host: ns.example.com.

# You can now also dynamically create and delete stub-zone's using
# unbound-control stub_add domain.com 1.2.3.4 5.6.7.8
# unbound-control stub_remove domain.com 1.2.3.4 5.6.7.8

# Forward zones
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of servers. These servers have to handle
# recursion to other nameservers. List zero or more nameservers by hostname
# or by ipaddress. Use an entry with name "." to forward all queries.
# If you enable forward-first, it attempts without the forward if it fails.
forward-zone:
    name: "."
    forward-addr: 1.1.1.2@853
    forward-addr: 1.0.0.2@853
    # forward-ssl-upstream: yes
	forward-tls-upstream: yes
    # forward-addr: 1.1.1.2@53
    # forward-addr: 1.0.0.2@53

# 	name: "example.com"
# 	forward-addr: 192.0.2.68
# 	forward-addr: 192.0.2.73@5355  # forward to port 5355.
# 	forward-first: no
# 	forward-tcp-upstream: no
# 	forward-tls-upstream: no
#	forward-no-cache: no
# forward-zone:
# 	name: "example.org"
# 	forward-host: fwd.example.com
#
# You can now also dynamically create and delete forward-zone's using
# unbound-control forward_add domain.com 1.2.3.4 5.6.7.8
# unbound-control forward_remove domain.com 1.2.3.4 5.6.7.8

# Authority zones
# The data for these zones is kept locally, from a file or downloaded.
# The data can be served to downstream clients, or used instead of the
# upstream (which saves a lookup to the upstream).  The first example
# has a copy of the root for local usage.  The second serves example.org
# authoritatively.  zonefile: reads from file (and writes to it if you also
# download it), primary: fetches with AXFR and IXFR, or url to zonefile.
# With allow-notify: you can give additional (apart from primaries and urls)
# sources of notifies.
 auth-zone:
	name: "."
	primary: 170.247.170.2        # b.root-servers.net
	primary: 192.33.4.12          # c.root-servers.net
	primary: 199.7.91.13          # d.root-servers.net
	primary: 192.5.5.241          # f.root-servers.net
	primary: 192.112.36.4         # g.root-servers.net
	primary: 193.0.14.129         # k.root-servers.net
	primary: 192.0.47.132         # xfr.cjr.dns.icann.org
	primary: 192.0.32.132         # xfr.lax.dns.icann.org
	primary: 2801:1b8:10::b       # b.root-servers.net
	primary: 2001:500:2::c        # c.root-servers.net
	primary: 2001:500:2d::d       # d.root-servers.net
	primary: 2001:500:2f::f       # f.root-servers.net
	primary: 2001:500:12::d0d     # g.root-servers.net
	primary: 2001:7fd::1          # k.root-servers.net
	primary: 2620:0:2830:202::132 # xfr.cjr.dns.icann.org
	primary: 2620:0:2d0:202::132  # xfr.lax.dns.icann.org
	fallback-enabled: yes
	for-downstream: no
	for-upstream: yes

# auth-zone:
#	name: "example.org"
#	for-downstream: yes
#	for-upstream: yes
#	zonemd-check: no
#	zonemd-reject-absence: no
#	zonefile: "example.org.zone"

# Views
# Create named views. Name must be unique. Map views to requests using
# the access-control-view option. Views can contain zero or more local-zone
# and local-data options. Options from matching views will override global
# options. Global options will be used if no matching view is found.
# With view-first yes, it will try to answer using the global local-zone and
# local-data elements if there is no view specific match.
# view:
#	name: "viewname"
#	local-zone: "example.com" redirect
#	local-data: "example.com A 192.0.2.3"
#	local-data-ptr: "192.0.2.3 www.example.com"
#	view-first: no
# view:
#	name: "anotherview"
#	local-zone: "example.com" refuse

# Fedora: DNSCrypt support not enabled since it requires linking to
#         another crypto library
#
# DNSCrypt
# To enable, use --enable-dnscrypt to configure before compiling.
# Caveats:
# 1. the keys/certs cannot be produced by Unbound. You can use dnscrypt-wrapper
#   for this: https://github.com/cofyc/dnscrypt-wrapper/blob/master/README.md#usage
# 2. dnscrypt channel attaches to an interface. you MUST set interfaces to
#   listen on `dnscrypt-port` with the follo0wing snippet:
# server:
#     interface: 0.0.0.0@443
#     interface: ::0@443
#
# Finally, `dnscrypt` config has its own section.
# dnscrypt:
#     dnscrypt-enable: yes
#     dnscrypt-port: 443
#     dnscrypt-provider: 2.dnscrypt-cert.example.com.
#     dnscrypt-secret-key: /path/unbound-conf/keys1/1.key
#     dnscrypt-secret-key: /path/unbound-conf/keys2/1.key
#     dnscrypt-provider-cert: /path/unbound-conf/keys1/1.cert
#     dnscrypt-provider-cert: /path/unbound-conf/keys2/1.cert

# CacheDB
# External backend DB as auxiliary cache.
# To enable, use --enable-cachedb to configure before compiling.
# Specify the backend name
# (default is "testframe", which has no use other than for debugging and
# testing) and backend-specific options.  The 'cachedb' module must be
# included in module-config, just before the iterator module.
# cachedb:
#     backend: "testframe"
#     # secret seed string to calculate hashed keys
#     secret-seed: "default"
#     # if the backend should be read from, but not written to.
#     cachedb-no-store: no
#     # if the cachedb should be checked before a serve-expired response is
#     # given, when serve-expired is enabled.
#     cachedb-check-when-serve-expired: yes
#
#     # For "redis" backend:
#     # (to enable, use --with-libhiredis to configure before compiling)
#     # redis server's IP address or host name
#     redis-server-host: 127.0.0.1
#     # redis server's TCP port
#     redis-server-port: 6379
#     # if the server uses a unix socket, set its path, or "" when not used.
#     # redis-server-path: "/var/lib/redis/redis-server.sock"
#     # if the server uses an AUTH password, specify here, or "" when not used.
#     # redis-server-password: ""
#     # timeout (in ms) for communication with the redis server
#     redis-timeout: 100
#     # set timeout on redis records based on DNS response TTL
#     redis-expire-records: no
#     # redis logical database to use, 0 is the default database.
#     redis-logical-db: 0

# IPSet
# Add specify domain into set via ipset.
# To enable:
# o use --enable-ipset to configure before compiling;
# o Unbound then needs to run as root user.
# ipset:
#     # set name for ip v4 addresses
#     name-v4: "list-v4"
#     # set name for ip v6 addresses
#     name-v6: "list-v6"
#

# Dnstap logging support, if compiled in by using --enable-dnstap to configure.
# To enable, set the dnstap-enable to yes and also some of
# dnstap-log-..-messages to yes.  And select an upstream log destination, by
# socket path, TCP or TLS destination.
# dnstap:
# 	dnstap-enable: no
# 	# if set to yes frame streams will be used in bidirectional mode
# 	dnstap-bidirectional: yes
# 	dnstap-socket-path: "/etc/unbound/dnstap.sock"
# 	# if "" use the unix socket in dnstap-socket-path, otherwise,
# 	# set it to "IPaddress[@port]" of the destination.
# 	dnstap-ip: ""
# 	# if set to yes if you want to use TLS to dnstap-ip, no for TCP.
# 	dnstap-tls: yes
# 	# name for authenticating the upstream server. or "" disabled.
# 	dnstap-tls-server-name: ""
# 	# if "", it uses the cert bundle from the main Unbound config.
# 	dnstap-tls-cert-bundle: ""
# 	# key file for client authentication, or "" disabled.
# 	dnstap-tls-client-key-file: ""
# 	# cert file for client authentication, or "" disabled.
# 	dnstap-tls-client-cert-file: ""
# 	dnstap-send-identity: no
# 	dnstap-send-version: no
# 	# if "" it uses the hostname.
# 	dnstap-identity: ""
# 	# if "" it uses the package version.
# 	dnstap-version: ""
# 	# log only 1/N messages, if 0 it is disabled. default 0.
# 	dnstap-sample-rate: 0
# 	dnstap-log-resolver-query-messages: no
# 	dnstap-log-resolver-response-messages: no
# 	dnstap-log-client-query-messages: no
# 	dnstap-log-client-response-messages: no
# 	dnstap-log-forwarder-query-messages: no
# 	dnstap-log-forwarder-response-messages: no

# Response Policy Zones
# RPZ policies. Applied in order of configuration. Any match from an earlier
# RPZ zone will terminate the RPZ lookup. QNAME, Response IP
# Address, nsdname, nsip and clientip triggers are supported. Supported
# actions are: NXDOMAIN, NODATA, PASSTHRU, DROP, Local Data, tcp-only
# and drop.  Policies can be loaded from a file, or using zone
# transfer, or using HTTP. The respip module needs to be added
# to the module-config, e.g.: module-config: "respip validator iterator".
# rpz:
#     name: "rpz.example.com"
#     zonefile: "rpz.example.com"
#     primary: 192.0.2.0
#     allow-notify: 192.0.2.0/32
#     url: http://www.example.com/rpz.example.org.zone
#     rpz-action-override: cname
#     rpz-cname-override: www.example.org
#     rpz-log: yes
#     rpz-log-name: "example policy"
#     rpz-signal-nxdomain-ra: no
#     for-downstream: no
#     tags: "example"
